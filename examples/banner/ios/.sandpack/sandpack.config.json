{"files":{"/test.ios":"import UIKit\n        import AWSCore\n        import AWSS3\n        \n        class ViewController: UIViewController {\n            \n            \n            override func viewDidLoad() {\n                super.viewDidLoad()\n                // Do any additional setup after loading the view, typically from a nib.\n            }\n            \n            override func didReceiveMemoryWarning() {\n                super.didReceiveMemoryWarning()\n                // Dispose of any resources that can be recreated.\n            }\n            \n            override func viewWillAppear(_ animated: Bool) {\n                super.viewWillAppear(animated)\n                \n                \n                // Configure AWS Cognito Credentials\n                let myIdentityPoolId = \"<identity pool=\"\" id=\"\" here=\"\">\"\n                \n                let credentialsProvider:AWSCognitoCredentialsProvider = AWSCognitoCredentialsProvider(regionType:AWSRegionType.usEast1, identityPoolId: myIdentityPoolId)\n                \n                let configuration = AWSServiceConfiguration(region:AWSRegionType.usEast1, credentialsProvider:credentialsProvider)\n                \n                AWSServiceManager.default().defaultServiceConfiguration = configuration\n                \n                // Set up AWS Transfer Manager Request\n                let S3BucketName = \"learn-swift\"\n                let ext = \"jpeg\"\n                let localFileName = \"kungfu2\" // local file name here\n                let remoteName = localFileName + \".\" + ext\n                //let fileName = NSUUID().UUIDString + \".\" + ext\n                let imageURL = Bundle.main.url(forResource: localFileName, withExtension: ext)!\n                \n                let uploadRequest = AWSS3TransferManagerUploadRequest()\n                uploadRequest?.body = imageURL\n                uploadRequest?.key = remoteName\n                uploadRequest?.bucket = S3BucketName\n                uploadRequest?.contentType = \"image/\" + ext\n                \n                let transferManager = AWSS3TransferManager.default()\n                \n                // Perform file upload\n                transferManager?.upload(uploadRequest).continue({ (task:AWSTask) -> Any? in\n            \n                    if let error = task.error {\n                        print(\"Upload failed with error: (\\(error.localizedDescription))\")\n                    }\n                    \n                    if let exception = task.exception {\n                        print(\"Upload failed with exception (\\(exception))\")\n                    }\n                    \n                    if task.result != nil {\n                        \n                        let s3URL = URL(string: \"https://s3.amazonaws.com/\\(S3BucketName)/\\(uploadRequest!.key!)\")!\n                        print(\"Uploaded to:\\n\\(s3URL)\")\n                        \n                        // Read uploaded image and display in a view\n                        let imageData = NSData(contentsOf: s3URL as URL)\n                        \n                        if let downloadedImageData = imageData\n                        {\n                            DispatchQueue.main.async {\n                                let image = UIImage(data: downloadedImageData as Data)\n                                let myImageView:UIImageView = UIImageView()\n                                myImageView.frame = CGRect(x:10, y:100, width:25, height:25)\n                                myImageView.image = image\n                                myImageView.contentMode = UIViewContentMode.scaleAspectFit\n                                \n                                self.view.addSubview(myImageView)\n                            }\n                        }\n                    }\n                    else {\n                        print(\"Unexpected empty result.\")\n                    }\n                    return nil\n                })\n                \n            }\n        }\n        \n        </identity>"},"customSetup":{"entry":"/test.ios"}}